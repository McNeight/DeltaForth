<html>

<head>
<meta name="GENERATOR" content="Microsoft FrontPage 3.0">
<title>Constants and Variables</title>
</head>

<body background="back.gif">

<h1><small><font face="Verdana">Constants and Variables</font></small></h1>

<hr>

<p><small><font face="Verdana"><strong>Constants</strong></font></small></p>

<p><small><font face="Verdana">Constants are used when a value is needed in several places
across the source code. Defining constants results in easier program maintenance and
better readability.</font></small></p>

<p><small><font face="Verdana">DELTA Forth only allows defining constants outside words.</font></small></p>

<p><small><font face="Verdana"><strong>Example:</strong></font></small></p>

<blockquote>
  <p><small><font face="Verdana"><strong>10 20 VARIABLE VAR20</strong></font></small></p>
  <p><small><font face="Verdana">This example creates a variable and associates the value
  20. The value 10 is lost, as it is not associated with anything. When executing VAR20, the
  corresponding value is placed on the stack.</font></small></p>
  <p><small><font face="Verdana">&nbsp;</font></small></p>
</blockquote>

<p><small><font face="Verdana"><strong>Variables</strong></font></small></p>

<p><small><font face="Verdana">In DELTA Forth, variables are a special kind of constants.
They place a value on the stack as well, but that value represents an address when the
programmer can store something. Each time you define a variable, the allocated address is
different. Like the constants, variables can be defined only outside words.</font></small></p>

<p><small><font face="Verdana"><strong>Example:</strong></font></small></p>

<blockquote>
  <p><small><font face="Verdana"><strong>VARIABLE VAR1</strong></font></small></p>
  <p><small><font face="Verdana"><strong>VARIABLE VAR2</strong></font></small></p>
  <p><small><font face="Verdana">If executed, the two variables will place different address
  values on the stack, as allocated at compile time. Optionally, if the default allocated
  space is insufficient (1 cell), we can use the <strong>ALLOT </strong>word that increases
  the amount of reserved space.</font></small></p>
</blockquote>

<p><small><font face="Verdana"><strong>Example:</strong></font></small></p>

<blockquote>
  <p><small><font face="Verdana"><strong>VARIABLE MORESPACE 20 ALLOT</strong></font></small></p>
  <p><small><font face="Verdana">In this example we created variable MORESPACE and reserved
  20 additional cells, resulting a total of 21 cells.</font></small></p>
  <p><small><font face="Verdana">&nbsp;</font></small></p>
</blockquote>

<p><strong><small><font face="Verdana">Local Variables</font></small></strong></p>

<p><small><font face="Verdana">When calculating complex expressions, it is sometimes
difficult to store temporary results on the stack. Every modern language has a way to
define local variables and DELTA Forth makes no exception. Version 0.95 introduced a new
reserved word: <strong>LOCAL</strong>. The entity that follows this word is declared as a
variable, its scope being the current word. Local variables cannot be declared outside
words.</font></small></p>

<p><strong><small><font face="Verdana">Example:</font></small></strong></p>

<blockquote>
  <p><small><font face="Courier New">VARIABLE VAR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>\
  Declare global variable</strong><br>
  <br>
  : TEST<br>
  LOCAL VAR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>\
  Declare local variable</strong><br>
  5 VAR !<br>
  .&quot; Inside TEST function VAR = &quot;<br>
  VAR ? CR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>\
  Display the value of the local variable</strong><br>
  ;<br>
  <br>
  : MAIN<br>
  10 VAR !<br>
  .&quot; Before call, VAR = &quot;<br>
  VAR ? CR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>\
  Display the value of the global variable</strong><br>
  <br>
  TEST
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>\
  Call test function</strong><br>
  <br>
  .&quot; After call, VAR = &quot;<br>
  VAR ? CR&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <strong>\
  Display the value of the global variable (unchanged)</strong><br>
  ;</font></small></p>
</blockquote>

<p><font face="Verdana"><small>As you may have guessed, the program output look like this:</small></font></p>

<blockquote>
  <p><small><font face="Courier New">Before call, VAR = 10<br>
  Inside TEST function VAR = 5<br>
  After call, VAR = 10</font></small></p>
</blockquote>

<p><small><font face="Verdana">Note that the local variable does not interfere with a
global variable with the same name.</font></small></p>

<p><small><font face="Verdana"><img src="violet.gif" align="middle" width="40" height="40">&nbsp;&nbsp;&nbsp;
<a href="index.htm">Back to main page</a></font></small></p>
</body>
</html>
